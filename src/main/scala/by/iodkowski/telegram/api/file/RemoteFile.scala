package by.iodkowski.telegram.api.file

import org.drinkless.tdlib.TdApi

/**
  * Represents a remote file.
  *
  * @param id                   Remote file identifier; may be empty. Can be used across application restarts or even from other devices for the current user. Uniquely identifies a file, but a file can have a lot of different valid identifiers. If the ID starts with &quot;http://&quot; or &quot;https://&quot;, it represents the HTTP URL of the file. TDLib is currently unable to download files if only their URL is known. If downloadFile is called on such a file or if it is sent to a secret chat, TDLib starts a file generation process by sending updateFileGenerationStart to the client with the HTTP URL in the originalPath and &quot;#url#&quot; as the conversion string. Clients should generate the file by downloading it to the specified location.
  * @param uniqueId             Unique file identifier; may be empty if unknown. The unique file identifier which is the same for the same file even for different users and is persistent over time.
  * @param isUploadingActive    True, if the file is currently being uploaded (or a remote copy is being generated by some other means).
  * @param isUploadingCompleted True, if a remote copy is fully available.
  * @param uploadedSize         Size of the remote available part of the file; 0 if unknown.
  */
final case class RemoteFile(
  id: String,
  uniqueId: String,
  isUploadingActive: Boolean,
  isUploadingCompleted: Boolean,
  uploadedSize: Int
)

private[api] object RemoteFile {
  def fromJava(o: TdApi.RemoteFile): RemoteFile =
    RemoteFile(o.id, o.uniqueId, o.isUploadingActive, o.isUploadingCompleted, o.uploadedSize)
}
